    #include<stdio.h>
    #include<string.h>
    #include<stdlib.h>
    #include<windows.h>
    #include<conio.h>
    #include<time.h>
    #include<math.h>



    void successsound()
    {
            Sleep(40);
            Beep(700,400);
            Sleep(40);
            Beep(700,400);
    }

    void errorsound()
    {
            Beep(720, 300);
            Sleep(80);
            Beep(800, 250);
    }

    void keysound()
    {
        Beep(700, 200);
    }

    void remove_string(char n[10000])
    {
        int i = 0;
        while(n[i]!='\0')
        {
            n[i]='\0';
            i++;
        }
    }

    void remove_array(int m[1000],int len)
    {
        for(int i=1;i<=len;i++)
        {
            m[i]=0;
        }
    }

    int cordinate(double d)
    {
        int dis=d;

        if(dis<5)
        {
            dis=1;
            dis+=2;
        }
        else
        {
            dis=dis/5;
            dis+=2;
        }

        return dis;
    }


    struct hotal
    {
        char address[1000];
        double lat1;
        double lon1;
    };
    struct hotal h_address[10000];



    struct user_add
    {
        char address[1000];
        double lat2;
        double lon2;
    };
    struct user_add u_address[10000];

    struct customer
    {
        char name[100];
        char password[100];
        char phone[50];
        char date_of_birth[20];
        char best_friend[50];
        char address1[1000];
        int shop_id[1000];
    };
    struct customer cus[10000];


    struct owner
    {
        int norder;
        char shop_name[100];
        char nickname[50];
        char password[50];
        char phone[50];
        char date_of_birth[50];
        char best_friend[50];
    };
    struct owner own[1000];


    struct order_food
    {
        char food_name[1000];
        int food_price;
        int food_remain;
    };
    struct order_food cus_food[100];


    struct shop
    {
        char shop_name[1000];
        int norder;
    };
    struct shop online_shop[1000];


    void gotoxy(int x, int y)
    {
        COORD c;
        c.X = x;
        c.Y = y;
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE) , c);
    }


    void space(int a,int b)
    {
        COORD position;
        position.X = a;
        position.Y = b;
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),position);
    }

    void clear(int n)
    {
        for(int i=0;i<n*2;i++)
        {
            space(0,i);
            printf("                                                                                                                                              \n                                                                                                                                             \n");
        }
        space(0,0);
    }

    int main()
    {

strcpy(u_address[1].address, "a.k._khan");
u_address[1].lat2 = 22.371;
u_address[1].lon2 = 91.792;

strcpy(u_address[2].address, "agrabad");
u_address[2].lat2 = 22.32456;
u_address[2].lon2 = 91.81126;

strcpy(u_address[3].address, "anderkilla");
u_address[3].lat2 = 22.34138674007712;
u_address[3].lon2 =  91.83609020032691;

strcpy(u_address[4].address, "bahaddarhat");
u_address[4].lat2 = 22.369356718080567;
u_address[4].lon2 = 91.84307355062124;

strcpy(u_address[5].address, "chittagong_port");
u_address[5].lat2 = 22.30941457549699;
u_address[5].lon2 =  91.80328965826868;

strcpy(u_address[6].address, "chittagong_university");
u_address[6].lat2 = 22.4721846557924;
u_address[6].lon2 = 91.78779115129821;

strcpy(u_address[7].address, "dampara_thana");
u_address[7].lat2 = 22.353798956159874;
u_address[7].lon2 = 91.82635294075662;

strcpy(u_address[8].address, "dewanhat");
u_address[8].lat2 = 22.33788602694516;
u_address[8].lon2 =  91.81502328987516;

strcpy(u_address[9].address, "fatikchhari");
u_address[9].lat2 = 22.75905666590868;
u_address[9].lon2 =  91.74046084278609;

strcpy(u_address[10].address, "foy's_lake");
u_address[10].lat2 = 22.369534406046974;
u_address[10].lon2 = 91.79615553012225;

strcpy(u_address[11].address, "gec_circle");
u_address[11].lat2 = 22.359514254315762;
u_address[11].lon2 = 91.82154642220131;

strcpy(u_address[12].address, "halishahar");
u_address[12].lat2 = 22.318373858728698;
u_address[12].lon2 = 91.77709970315824;

strcpy(u_address[13].address, "hathazari");
u_address[13].lat2 = 22.508146078113747;
u_address[13].lon2 = 91.80804719383205;

strcpy(u_address[14].address, "kumira");
u_address[14].lat2 = 22.52016402720528;
u_address[14].lon2 =  91.7301915448004;

strcpy(u_address[15].address, "m._a._aziz_stadium");
u_address[15].lat2 = 22.34600932653095;
u_address[15].lon2 = 91.82451550939989;

strcpy(u_address[16].address, "moradpor");
u_address[16].lat2 = 22.366232879498973;
u_address[16].lon2 = 91.8285778845688;

strcpy(u_address[17].address, "sitakunda");
u_address[17].lat2 = 22.618708800639922;
u_address[17].lon2 = 91.67919798487989;

strcpy(u_address[18].address, "iiuc");
u_address[18].lat2 = 22.496600895692264;
u_address[18].lon2 = 91.7210835575383;







strcpy(h_address[2].address, "alif_restaurant");
h_address[2].lat1 = 22.358519921943294;
h_address[2].lon1 = 91.78192560001011;

strcpy(h_address[1].address, "Four_Seasons_Restaurant");
h_address[1].lat1 = 21.958835923304065;
h_address[1].lon1 = 92.06484546452387;

strcpy(h_address[3].address, "allhur_dan_hotal");
h_address[3].lat1 = 22.49562812765347;
h_address[3].lon1 = 91.72180936219422;

strcpy(h_address[4].address, "ambrosia_restaurant_ltd");
h_address[4].lat1 = 22.323197479678907;
h_address[4].lon1 = 91.81241569547238;

strcpy(h_address[5].address, "ayojon_restora");
h_address[5].lat1 = 22.35919587965305;
h_address[5].lon1 = 91.78228633780125;

strcpy(h_address[6].address, "IIUC_Cafeteria");
h_address[6].lat1 = 22.497105070733912;
h_address[6].lon1 = 91.72145620203787;

strcpy(h_address[7].address, "barcode_cafe");
h_address[7].lat1 = 22.365209148957454;
h_address[7].lon1 = 91.82435821213323;

strcpy(h_address[8].address, "bay_leaf_restaurant");
h_address[8].lat1 = 22.333956931655234;
h_address[8].lon1 = 91.78921471081686;

strcpy(h_address[9].address, "Barcode_Food_Junction");
h_address[9].lat1 = 22.368348452422712;
h_address[9].lon1 = 91.83649891209726;

strcpy(h_address[10].address, "bonanza_port_restaurant");
h_address[10].lat1 = 22.313836179685644;
h_address[10].lon1 = 91.79910339547213;

strcpy(h_address[11].address, "Highway_Sweets_&_Confectionery");
h_address[11].lat1 = 22.329061875287632;
h_address[11].lon1 = 91.79067787299658;

strcpy(h_address[12].address, "broast_cafe");
h_address[12].lat1 = 22.347121679661765;
h_address[12].lon1 = 91.81882849547301;

strcpy(h_address[13].address, "Red_chilli");
h_address[13].lat1 = 22.346622125148528;
h_address[13].lon1 = 91.82336479342668;

strcpy(h_address[14].address, "cafe_Mr_Bean");
h_address[14].lat1 = 22.319958804685957;
h_address[14].lon1 = 91.7977358531444;

strcpy(h_address[15].address, "Tasty_Treat");
h_address[15].lat1 = 22.32353176061126;
h_address[15].lon1 = 91.79297224993401;

strcpy(h_address[16].address, "captain_dine");
h_address[16].lat1 = 22.332510679672104;
h_address[16].lon1 = 91.78931752430864;

strcpy(h_address[17].address, "Busaba");
h_address[17].lat1 = 22.331498416618903;
h_address[17].lon1 = 91.78889909970226;

strcpy(h_address[18].address, "Kacchi_Dine");
h_address[18].lat1 = 22.358481055224424;
h_address[18].lon1 = 91.83790256425995;

strcpy(h_address[19].address, "Cha_Guys");
h_address[19].lat1 = 22.35659246386332;
h_address[19].lon1 = 91.83614177369908;

strcpy(h_address[20].address, "PizzaBurg");
h_address[20].lat1 = 22.34339468837947;
h_address[20].lon1 = 91.83503448279569;

strcpy(h_address[21].address, "gold_hill_hotel_&_restaurant");
h_address[21].lat1 = 22.36549723612423;
h_address[21].lon1 = 91.79657902430958;

strcpy(h_address[22].address, "grand_mugal");
h_address[22].lat1 = 22.35273610232987;
h_address[22].lon1 = 91.82169572430925;

strcpy(h_address[23].address, "green_chilli_restaurant");
h_address[23].lat1 = 22.338164400828095;
h_address[23].lon1 = 91.8304212531449;

strcpy(h_address[24].address, "gravy_dine");
h_address[24].lat1 = 22.361367757594735;
h_address[24].lon1 = 91.81242119547346;

strcpy(h_address[25].address, "handi_restaurant");
h_address[25].lat1 = 22.354910564153442;
h_address[25].lon1 = 91.82161727616177;

strcpy(h_address[26].address, "hunger_killers");
h_address[26].lat1 = 22.356735457267952;
h_address[26].lon1 = 91.83745395314543;

strcpy(h_address[27].address, "Da_Signature");
h_address[27].lat1 = 22.3466437838044;
h_address[27].lon1 = 91.83440693243945;

strcpy(h_address[28].address, "impala_chinese_and_south_indian_restaurant");
h_address[28].lat1 = 22.3612642796515;
h_address[28].lon1 = 91.82894533780131;

strcpy(h_address[29].address, "istison");
h_address[29].lat1 = 22.49873206812485;
h_address[29].lon1 = 91.71915589999999;

strcpy(h_address[30].address, "kasbon_restaurant");
h_address[30].lat1 = 22.495327450718143;
h_address[30].lon1 = 91.72154366718091;

strcpy(h_address[31].address, "kashmir_restaurant");
h_address[31].lat1 = 22.367958548754455;
h_address[31].lon1 = 91.843467198642;

strcpy(h_address[32].address, "Faha's_Kitchen");
h_address[32].lat1 = 22.32638345090648;
h_address[32].lon1 = 91.81645001534676;

strcpy(h_address[33].address, "kutumbari");
h_address[33].lat1 = 22.36257707881414;
h_address[33].lon1 = 91.78253929266302;

strcpy(h_address[34].address, "kutumbari_restaurant_and_biriyani_house");
h_address[34].lat1 = 22.358820231965385;
h_address[34].lon1 = 91.78261073373247;

strcpy(h_address[35].address, "Ziku_Restora");
h_address[35].lat1 = 22.498712949066878;
h_address[35].lon1 = 91.71916738860399;

strcpy(h_address[36].address, "Panthashala_Restora");
h_address[36].lat1 = 22.49566467986563;
h_address[36].lon1 = 91.72153041245677;

strcpy(h_address[37].address, "WAFFLE_&_DOUGH");
h_address[37].lat1 = 22.349232279177894;
h_address[37].lon1 = 91.82514302752021;

strcpy(h_address[38].address, "lamingrass");
h_address[38].lat1 = 22.327524279675732;
h_address[38].lon1 = 91.81541026663642;

strcpy(h_address[39].address, "mannan_canteen");
h_address[39].lat1 = 22.49397117841309;
h_address[39].lon1 = 91.7210136167397;

strcpy(h_address[40].address, "masala_twist_restaurant");
h_address[40].lat1 = 22.356656634547342;
h_address[40].lon1 =  91.83774004134354;

strcpy(h_address[41].address, "mejjainna_bari");
h_address[41].lat1 = 22.366181805779362;
h_address[41].lon1 = 91.82635294075662;

strcpy(h_address[42].address, "mezetto");
h_address[42].lat1 = 22.34868262608573;
h_address[42].lon1 = 91.82326303597;

strcpy(h_address[43].address, "Sabrin_Restaurant_&_Biriani_House");
h_address[43].lat1 = 22.49054306248109;
h_address[43].lon1 = 91.71866722691622;

strcpy(h_address[44].address, "Bangaliana_Restora_&_Yummy_Foods");
h_address[44].lat1 = 22.335622409280646;
h_address[44].lon1 = 91.82796300482654;

strcpy(h_address[45].address, "nabab_bari_restaurant");
h_address[45].lat1 = 22.36535917964861;
h_address[45].lon1 = 91.78117313780139;

strcpy(h_address[46].address, "patil");
h_address[46].lat1 = 22.347749081166004;
h_address[46].lon1 = 91.8193547986378;

strcpy(h_address[47].address, "rio_coffee");
h_address[47].lat1 = 22.36133147965149;
h_address[47].lon1 = 91.8138273954734;

strcpy(h_address[48].address, "Bonjur");
h_address[48].lat1 = 22.360735047483228;
h_address[48].lon1 = 91.82136212085149;

strcpy(h_address[49].address, "royal_hut");
h_address[49].lat1 = 22.346679656559314;
h_address[49].lon1 = 91.8237563243091;

strcpy(h_address[50].address, "shawal_restaurant_and_biriyani_house");
h_address[50].lat1 = 22.495664776397103;
h_address[50].lon1 = 91.7217867152888;

strcpy(h_address[51].address, "shangri-la_restaurant");
h_address[51].lat1 = 22.32759585521486;
h_address[51].lon1 = 91.81400085314462;

strcpy(h_address[52].address, "FOOD_AVENUE_ROOFTOP");
h_address[52].lat1 = 22.361238607375444;
h_address[52].lon1 = 91.8420036453355;

strcpy(h_address[53].address, "sultan_dine");
h_address[53].lat1 = 22.365814757908456;
h_address[53].lon1 = 91.82342635314569;

strcpy(h_address[54].address, "tayef_restora");
h_address[54].lat1 = 22.34327323297459;
h_address[54].lon1 = 91.78744751081712;

strcpy(h_address[55].address, "Cafe_Fusion");
h_address[55].lat1 = 22.373798560549506;
h_address[55].lon1 = 91.78049312833794;

strcpy(h_address[56].address, "tava_restaurant_&_lounge");
h_address[56].lat1 = 22.361524013516764;
h_address[56].lon1 = 91.81238339547349;

strcpy(h_address[57].address, "Foodmarket");
h_address[57].lat1 = 22.367565504177936;
h_address[57].lon1 = 91.82430948463697;

strcpy(h_address[58].address, "the_copper_chimney_restaurant_gec");
h_address[58].lat1 = 22.362924035759363;
h_address[58].lon1 = 91.82135605314558;

strcpy(h_address[59].address, "the_green_shadow_restaurant");
h_address[59].lat1 = 22.326700106104642;
h_address[59].lon1 = 91.81512695314457;

strcpy(h_address[60].address, "the_pavilion");
h_address[60].lat1 = 22.35737444262635;
h_address[60].lon1 = 91.8210523545123;

strcpy(h_address[61].address, "La_Gondola");
h_address[61].lat1 = 22.329350369314326;
h_address[61].lon1 = 91.83637583968398;

strcpy(h_address[62].address, "la_ARISTOCRACY");
h_address[62].lat1 = 22.325802022400772;
h_address[62].lon1 = 91.81566230291327;

strcpy(h_address[63].address, "ventura_bistro_&_restaurant");
h_address[63].lat1 = 22.361381713486466;
h_address[63].lon1 = 91.81245872430948;

strcpy(h_address[64].address, "Food_Factory");
h_address[64].lat1 = 22.364828439094854;
h_address[64].lon1 = 91.80820917116458;

strcpy(h_address[65].address, "zouk");
h_address[65].lat1 = 22.351686879658395;
h_address[65].lon1 = 91.8216913666371;

strcpy(h_address[66].address, "Alif_Restaurant");
h_address[66].lat1 = 22.338348061643682;
h_address[66].lon1 = 91.81313111111525;




///opening fodx
int x_axix=42;
        int y_axix=12;
	int num_box = 219;
	char ch_box = num_box;
        gotoxy(x_axix-5 , y_axix-3);
        printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix-2);
        printf("%c",ch_box);
        gotoxy(x_axix+46 , y_axix-2);
        printf("%c",ch_box);
        gotoxy(x_axix-5 , y_axix-1);
        printf("%c",ch_box);
        gotoxy(x_axix+46 , y_axix-1);
        printf("%c",ch_box);
        gotoxy(x_axix-5 , y_axix);
        printf("%c     %c%c%c%c%c    %c%c%c%c%c%c%c    %c%c%c%c%c%c     %c%c      %c%c    %c\n",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+1);
        printf("%c     %c%c       %c%c   %c%c    %c%c   %c%c      %c%c  %c%c      %c\n",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+2);
        printf("%c     %c%c%c%c%c    %c%c   %c%c    %c%c    %c%c       %c%c        %c\n",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+3);
        printf("%c     %c%c       %c%c   %c%c    %c%c   %c%c      %c%c  %c%c      %c\n",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+4);
        printf("%c     %c%c       %c%c%c%c%c%c%c    %c%c%c%c%c%c     %c%c      %c%c    %c\n",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+5);
        printf("%c",ch_box);
        gotoxy(x_axix+46 , y_axix+5);
        printf("%c",ch_box);
        gotoxy(x_axix-5 , y_axix+6);
        printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c               %c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box,ch_box);
        gotoxy(x_axix-5 , y_axix+13);
        printf("LOADING...");

        Sleep(1);
        gotoxy(x_axix +13 , y_axix+6);
        printf("%c   ORDER   %c",ch_box,ch_box);
        for(int i=10;i<=100;i+=10)
        {





            if(i==10)
            {
            gotoxy(x_axix-5 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);

            gotoxy(x_axix, y_axix+8);
            printf("             %c    PAY    %c",ch_box,ch_box);
            }
            if(i==20)
            {
            gotoxy(x_axix , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            gotoxy(x_axix , y_axix+10);
            printf("             %c   ENJOY   %c",ch_box,ch_box);
            }
            if(i==30)
            {
            gotoxy(x_axix+5 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==40)
            {
            gotoxy(x_axix+10 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==50)
            {
            gotoxy(x_axix+15 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==60)
            {
            gotoxy(x_axix+20 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==70)
            {
            gotoxy(x_axix+25 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==80)
            {
            gotoxy(x_axix+30 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==90)
            {
            gotoxy(x_axix+35 , y_axix+14);
            printf("%c%c%c",ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            Sleep(1);
            }
            if(i==100)
            {
            gotoxy(x_axix+38 , y_axix+14);
            printf("%c%c%c%c%c",ch_box,ch_box,ch_box,ch_box,ch_box);
            gotoxy(x_axix+44 , y_axix+14);
            printf("%d%% ",i);
            }
        }


        //Sleep(1);
        ///clear screen
        clear(15);














        int user;

///part:1  struct update from file
        part1:

        user = 0;
        double distance;
        double l1,l2,g1,g2;
        int time1 = 0;
        int item = 0;
        int yes;
        int filter1,filter2;
        int part=-1;
        int key;
        int key1;
        int key2=0;
        int key3=-1;
        int number;
        int key4=0;
        int sum;
        int key5=0;
        int food_price;
        int key6,key24,key25,key27,key26,key28,key29,key7,key8,key9,key10,key11,key12,key13,key14,key15,key16,key17,key18,key19,key20,key21;
        int key23;
        int id1;
        char phone8[100];
        int add_food;
        int del=0;
        int id2;
        int id3;
        double dlong,dlat;
        time_t t;
        time(&t);
        int n3;
        char ch;
        char search1[1000];
        char ch2;
        char search[1000];
        char shop_name[1000];
        char dob[100];
        char dob1[100];
        char phone2[100];
        int flag=0;
        int flag1=0;
        int sort_order[10000];
        double temp;
        int flag5;
        int index1=0;
        int index3;
        int oid;
        int length;
        int length1;
        int length3;
        int length2;
        int amount;
        int flag4;
        int index2;
        char phone7[100];
        double sort_distance[1000];
        int sort_address[10000];
        char address[1000];
        char password1[100];
        char password2[100];
        char password5[100];
        char phone1[100];
        double range;
        char check_phone[100];
        char check_date_of_birth[100];
        char best_friend1[100];
        char nickname[100];
        int food_index[1000]={0};
        char c_phone_number[50];
        int wrong1 = 0;
        int wrong3 = -1;
        int wrong4 = -1;
        char transection[100];
        char cus_history[100];
        char phone3[100];
        char phone5[100];
        char phone6[100];
        char ch1;
        char dob2[50];
        char phone4[50];
        char best_friend2[50];
        char date_of_birth[50];
        char date_of_birth2[50];
        int ouser;





        FILE *p;


        int result;
        int n1,n2;

        int struct_index = 1;

        p = fopen("customer_profile.txt","a+");

        int line = 0;

        while(!feof(p))
        {
            if(line==0)
                fscanf(p, "%s" ,&cus[struct_index].name);
            if(line==1)
                fscanf(p, "%s" ,&cus[struct_index].password);
            if(line==2)
                fscanf(p, "%s" ,&cus[struct_index].phone);
            if(line==3)
                fscanf(p, "%s" ,&cus[struct_index].date_of_birth);
            if(line==4)
                fscanf(p, "%s" ,&cus[struct_index].best_friend);
            if(line==5)
                fscanf(p, "%s" ,&cus[struct_index].address1);

            line++;

            if(line==6)
            {
                line=0;
                struct_index++;
                user++;
            }
        }

        fclose(p);


        if(part==8)
        {
            part = 0;
            wrong4=0;
            goto part5;
        }
///part:2   file update from struct
        part2:
        p = fopen("customer_profile.txt","w");

        for(int i=1;i<=user;i++)
        {
            if(del==1 && id3==i)
            {
                del=0;
                id3=0;
                continue;
            }

            fputs(cus[i].name,p);

            fputs("\n",p);
            fputs(cus[i].password,p);

            fputs("\n",p);
            fputs(cus[i].phone,p);

            fputs("\n",p);
            fputs(cus[i].date_of_birth,p);

            fputs("\n",p);
            fputs(cus[i].best_friend,p);

            fputs("\n",p);
            fputs(cus[i].address1,p);

            fputs("\n",p);
        }

        fclose(p);

        ///--------------------------------------------------------------------------------
        ///--------------------------------------------------------------------------------
        ///--------------------------------------------------------------------------------
        ///--------------------------------------------------------------------------------
        ///--------------------------------------------------------------------------------



        if(part==7)
        {
            part=0;
            goto part6;
        }

        if(part==8)
        {
            part=0;
            user++;  ///because for signing up a new account had been added...
            goto part6;
        }
        if(part==9)
        {
            part=0;
            goto part1;
        }

///part:3     choose customer and owner
        part3:
        if(wrong1==1)
        {
            wrong1=0;
            printf("***  You have choosen the wrong key  ***\n    ***  please try again  ***\n\n");
        }

        printf("Who are you?\n");
        printf("1. I am customer...\n");
        printf("2. I am the owner...\n");
        printf("Enter the key : ");
        scanf("%d",&key);
        keysound();

        ///loading part...
        printf("Loading");
        for(int i=0;i<4;i++)
        {
            Sleep(time1);
            printf(" .");
        }

        ///clear screen
        clear(7);

        ///choose customer
        if(key==1)
        {
///part:4    choose sign up or log in
            while(1)
            {
            part4:
            printf("Account:\n========\n");
            printf("1. Log in\n");
            printf("2. Sign up\n\n");
            printf("3. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key1);
            keysound();
            ///clear screen
            clear(7);

            if(key1==3)
            {
                goto part3;
            }
///part:5    enter wrong password
            key2=0;
            wrong4=0;

            if(key1==1)
            {
                part5:

                if(wrong4 == 1)
                {
                    printf("Wrong information\n\n1. forget password\n2. try again\n3. back\n");
                    errorsound();
                    printf("Enter the key : ");
                    scanf("%d",&key2);keysound();
                }

                ///clear screen
                clear(7);

                if(wrong4==0)
                    goto part6;

                if(key2==1)
                {
                    wrong3=1;
                    goto part7;
                }
                else if(key2==3)
                    goto part3;
                else if(key2==2)  ///try again
                    goto part6;
                else
                {
                    printf("enter right key\n");
                    wrong4=1;
                    goto part5;
                }

///part6  log in
                part6:
                printf("Log in\n========\n");
                printf("enter phone number : ");
                scanf("%s",&phone1);keysound();

                flag5=0;
                for(int i=1;i<=user;i++)
                {
                    if(strcmp(cus[i].phone , phone1)==0)
                    {
                        flag5=1;
                        goto part6b;
                    }
                }
                if(flag5==0)
                {
                    while(1)
                    {
///part6a
                    part6a:

                    ///clear screen
                    clear(7);
                    printf("There is no account for this number \n");
                    printf("1. Try again\n");
                    printf("2. Back\n");
                    errorsound();
                    printf("\nEnter the key : ");

                    scanf("%d",&key10);keysound();
                    if(key10==1)
                    {
                        ///clear screen
                        clear(8);
                        goto part6;
                    }
                    if(key10==2)
                    {
                        ///clear screen
                        clear(8);
                        goto part4;
                    }
                    ///clear screen
                    clear(8);
                    }
                  }

///part6b
                part6b:
                printf("Enter password : ");
                scanf("%s",&password1);
                keysound();
                printf("Answer the question : \n");

                srand(time(0));

                n1 = rand()%5;
                n2 = rand()%5;
                printf("%d + %d = ",n1,n2);
                scanf("%d",&result);
                keysound();

                ///clear screen
                clear(7);


                flag=0;
                for(int i=1;i<=user;i++)
                {
                    if(strcmp(cus[i].phone , phone1)==0)
                    {
                        id1=i;
                        flag=1;
                        break;
                    }
                }
                if(strcmp(cus[id1].password , password1) == 0  && (n1+n2)==result && flag==1)
                {
                    id2=id1;
                    wrong4= 0;
                    goto part9;
                }
                else
                {
                    wrong4 = 1;
                    goto part5;
                }



///part7   change password
                part7:
                ///clear screen
                clear(8);
                if(wrong3==1)
                {
                    wrong3=0;
                    printf("Answer the question\n");
                    printf("Enter your phone number : ");
                    scanf("%s",&phone2);keysound();
                    printf("What is your date of birth (DD/MM/YYYY): ");
                    scanf("%s",&dob);keysound();
                    printf("What is your Best friend nickname : ");
                    scanf("%s",&best_friend1);keysound();

                    length = strlen(dob);
                    length1 = strlen(phone2);


                    srand(time(0));

                    n1 = rand()%5;
                    n2 = rand()%5;
                    printf("Answer the question:\n");
                    printf("%d + %d = ",n1,n2);
                    scanf("%d",&result);keysound();



                    ///loading part...
                    printf("Loading");
                    for(int i=0;i<4;i++)
                    {
                        Sleep(time1);
                        printf(" .");
                    }
                    ///clear screen
                    clear(7);

                    flag4=0;
                    for(int i=1;i<=user;i++)
                    {
                        if(strcmp(cus[i].phone , phone2)==0 && strcmp(cus[i].best_friend , best_friend1)==0  &&  strcmp(cus[i].date_of_birth , dob)==0 && n1+n2==result && (length==9 || length==10) && length1==11)
                        {
                            id1=i;
                            flag4=1;
                            break;
                        }
                    }

                    if(flag4==0)
                    {
                        ///clear screen
                        clear(7);
                        goto part5;
                    }

                    printf("Charge password : ");
                    scanf("%s",cus[id1].password);keysound();
                    part=7;
                    wrong4=0;
                    ///clear screen
                    clear(7);
                    goto part2;

                    }
                    else
                    {
                    ///clear screen
                    clear(7);
                    goto part5;
                    }
            }
            if(key1==2)
            {
///part:8   sign up

                part8:

                printf("sign in :\n==========\n");
                printf("enter your phone number :");
                scanf("%s",&check_phone);keysound();
                length2 = strlen(check_phone);
                for(int i=1;i<=user;i++)
                {
                    if(strcmp(cus[i].phone , check_phone)==0 || length2!=11)
                    {
///part8a
                        part8a:
                        ///clear screen
                        clear(7);

                        printf("You can't use this number\n");
                        printf("1. Try again\n");
                        printf("2. Back\n");
                        printf("=================\n");
                        errorsound();
                        printf("Enter the key : ");
                        scanf("%d",&key9);keysound();
                        if(key9==1)
                        {
                            ///clear screen
                            clear(7);
                            goto part8;
                        }
                        if(key9==2)
                        {
                            ///clear screen
                            clear(7);
                            goto part3;
                        }
                        else
                        {
                            ///clear screen
                            clear(7);
                            goto part8a;
                        }
                    }
                }

                printf("Enter your date of birth (DD/MM/YYYY) :");
                scanf("%s",&check_date_of_birth);keysound();
                length3 = strlen(check_date_of_birth);


                if(length3!=10)
                {
                    ///clear screen
                    clear(7);
                    printf("Please enter correct information\n\n");
                    errorsound();
                    goto part8;
                }
                user++;

                strcpy(cus[user].phone , check_phone);
                strcpy(cus[user].date_of_birth , check_date_of_birth);
                printf("enter your nickname :");
                scanf("%s",&cus[user].name);keysound();
                Beep(700, 200);

                printf("enter password :");
                scanf("%s",&cus[user].password);keysound();

                printf("Enter your best friend name : ");
                scanf("%s",&cus[user].best_friend);keysound();

                system("cls");

                printf("Select your address : \n");
                printf("=-=-=-=-=-=-=-=-=-=-=\n");

                while(1)
                {
                    for(int i=1;i<=18;i++)
                    {
                        printf("%d . %s\n",i,u_address[i].address);
                    }
                    printf("Enter the key : ");
                    scanf("%d",&key21);keysound();

                    if(key21>=1 && key21<=18)
                    {
                        strcpy(cus[user].address1,u_address[key21].address);
                        break;
                    }

                    system("cls");
                }


                ///clear screen
                clear(20);


                    ///loading part...
                    for(int i=10;i<110;i+=10)
                    {
                    printf("Creating account : (%d %%)",i);
                    Sleep(time1);

                    ///clear screen
                    clear(7);
                    }

                    ///clear screen
                    clear(7);

                    printf("Log in your account:\n\n");

                    part=8;
                    goto part2;
                }
                if(key1==3)
                {
                   ///clear screen
                    clear(7);
                    wrong1=0;
                    goto part3;
                }
            }
        }
        if(key==2)
        {

///======================================================================================
///owner part
        wrong1 = 0;
        part=0;
///part8b1
///struct will update  from file:
        part8b1:

        ouser = 0;
        p=fopen("owner.txt","a+");

        while(!feof(p))
        {
            ouser++;
            fscanf(p,"%d ",&own[ouser].norder);
            fscanf(p,"%s ",own[ouser].shop_name);
            fscanf(p,"%s ",own[ouser].nickname);
            fscanf(p,"%s ",own[ouser].phone);
            fscanf(p,"%s ",own[ouser].password);
            fscanf(p,"%s ",own[ouser].date_of_birth);
            fscanf(p,"%s ",own[ouser].best_friend);
        }

        fclose(p);

///part8b1_1...  shop list struct update
        part8b1_1:
        p = fopen("shop_list.txt","a+");
        index3 = 0;
        while(!feof(p))
        {
            index3++;
            fscanf(p,"%s",online_shop[index3].shop_name);
            fscanf(p,"%d",&online_shop[index3].norder);
        }
        fclose(p);

///part8b1_2...
/// owner.txt file update...
        part8b1_2:
        p=fopen("owner.txt","w");

        for(int i=1;i<=ouser;i++)
        {
            fprintf(p,"%d\n",own[ouser].norder);
            fprintf(p,"%s\n",own[ouser].shop_name);
            fprintf(p,"%s\n",own[ouser].nickname);
            fprintf(p,"%s\n",own[ouser].phone);
            fprintf(p,"%s\n",own[ouser].password);
            fprintf(p,"%s\n",own[ouser].date_of_birth);
            fprintf(p,"%s\n",own[ouser].best_friend);
        }

        fclose(p);

/// shop_list.txt file update
        p = fopen("shop_list.txt","w");

        for(int i=1;i<=index3;i++)
        {

            fprintf(p,"%s",online_shop[index3].shop_name);
            fprintf(p," %d\n",online_shop[index3].norder);

        }
        fclose(p);

///part8b2
        part8b2:
        while(1)
        {
            printf("1. Sign up\n");
            printf("2. Log in\n");
            printf("Enter the key : ");
            scanf("%d",&key23);
            keysound();


            if(key23==1)
            {
                system("cls");
                goto part8b;
            }
            if(key23==2)
            {
                system("cls");
                goto part8c;
            }
            system("cls");
        }


///if there is no account for the owner then the sign up part will work and if there is an account for the owner then the log in part will work

///part8b:
///owner sign up part
        part8b:


            printf("Sign up : \n===============\n");
            printf("Enter your phone number : ");
            scanf("%s",phone4);
            keysound();
            if(strlen(phone4)==11)
            {
                for(int i=1;i<=ouser;i++)
                {
                    if(strcmp(own[i].phone,phone4)==0)
                    {
                        system("cls");
                        printf("You can't use this number\n\n");
                        errorsound();
                        goto part8b;
                    }
                }
            }
            else
            {
                system("cls");
                printf("Enter correct information\n\n");
                errorsound();
                goto part8b;
            }

            printf("Enter your Date of birth (DD/MM/YYYY) : ");
            scanf("%s",&dob2);
            keysound();
            if(strlen(dob2)!=10)
            {
                ///clear screen
                clear(7);
                printf("Enter correct information\n\n");
                errorsound();
                goto part8b;
            }

            printf("Enter your shop name: ");
            scanf("%s",&shop_name);

            for(int i=1;i<=ouser;i++)
            {
                    if(strcmp(own[i].shop_name,shop_name)==0)
                    {
                        system("cls");
                        printf("You can't use this name for your shop\n\n");
                        errorsound();
                        goto part8b;
                    }
            }
            ouser++;
            strcpy(own[ouser].phone , phone4);
            strcpy(own[ouser].date_of_birth , dob2);
            strcpy(own[ouser].shop_name , shop_name);


            printf("Your nickname : ");
            scanf("%s",&own[ouser].nickname);keysound();

            printf("Your best friend nickname : ");
            scanf("%s",&own[ouser].best_friend);keysound();

            printf("Enter password : ");
            scanf("%s",&own[ouser].password);keysound();

            own[ouser].norder = 0;



            ///clear screen
            clear(7);
            goto part8c;

///owner file update from struct
///part8c
        part8c:


        p= fopen("owner.txt","w");
        for(int i=1;i<=ouser;i++)
        {
        fprintf(p,"%d\n",own[i].norder);
        fprintf(p,"%s\n",own[i].shop_name);
        fprintf(p,"%s\n",own[i].nickname);
        fprintf(p,"%s\n",own[i].phone);
        fprintf(p,"%s\n",own[i].password);
        fprintf(p,"%s\n",own[i].date_of_birth);
        fprintf(p,"%s\n",own[i].best_friend);
        }
        fclose(p);

///owner log in part:
///part8d:
        part8d:
        printf("Log in :\n===========\n");
        printf("Enter your phone number : ");
        scanf("%s",&phone5);keysound();
        printf("Enter password : ");
        scanf("%s",&password5);keysound();

        for(int i=1;i<=ouser;i++)
        {
            if(strcmp(phone5 , own[i].phone)==0 && strcmp(password5,own[i].password)==0)
            {
                oid = i;
                goto part12;
            }

        }


        while(1)
        {

            ///clear screen
            clear(7);
            printf("Wrong information...\n");
            printf("1. Try again\n");
            printf("2. Forget password\n");
            printf("3. Back\n=======================\n");
            errorsound();
            printf("Enter the key : ");
            scanf("%d",&key12);keysound();

            if(key12==1)
            {
                ///clear screen
                clear(7);
                goto part8d;
            }
            else if(key12==2)
            {
                ///clear screen
                clear(7);
                goto part8e;
            }
            else if(key12==3)
            {
                ///clear screen
                clear(7);
                goto part3;
            }
        }

///change password for owner
///part8e
        part8e:
        printf("Enter your best friend name : ");
        scanf("%s",best_friend2);keysound();
        printf("Enter your date of birth (DD/MM/YYYY): ");
        scanf("%s",date_of_birth2);keysound();

        printf("Answer the question : \n");

        srand(time(0));

        n1 = rand()%5;
        n2 = rand()%5;
        printf("%d + %d = ",n1,n2);
        scanf("%d",&result);
        keysound();

        for(int i=1;i<=ouser;i++)
        {
             if(strcmp(date_of_birth2 , own[i].date_of_birth)==0  && result ==(n1+n2) && strcmp(best_friend2 , own[i].best_friend)==0)
             {
                  printf("Enter new password : ");
                  scanf("%s",&own[i].password);keysound();

                 ///clear screen
                 clear(7);

                  goto part8c;
            }
        }
        while(1)
           {
            ///clear screen
            clear(7);
            errorsound();
            printf("Wrong information\n");
            printf("1. Try again\n");
            printf("2. Back\n");
            scanf("%d",&key13);keysound();

            if(key13==1)
            {
                ///clear screen
                clear(7);
                goto part8e;
            }
            if(key13==2)
            {
                ///clear screen
                clear(7);
                goto part3;
            }
           }
        }
        else
        {
            ///clear screen
            clear(7);
            wrong1 = 1;
            goto part3;
        }
///==================================================================================================
///owner and customer menu part...
///part9   customer menu

        part9:
        ///clean screen
        clear(40);
        printf("As-salamu alaykum %s\n",cus[id1].name);

        printf("Menu:\n=========\n");
        printf("1. My profile\n");
        printf("2. Order food\n");
        printf("3. My order history\n");
        printf("4. Log out\n");
        printf("5. Delete account\n");
        printf("6. Account setting\n");
        printf("7. Contact us\n");
        printf("8. Nearest restaurant\n");
        printf("9. Feedback\n");
        printf("==================\n");
        printf("Enter the key: ");
        scanf("%d",&key3);keysound();


        ///loading part...
        printf("Loading");
        for(int i=0;i<4;i++)
        {
            Sleep(time1);
            printf(" .");
        }

        ///clean screen
        clear(8);
        if(key3==1)
        {
///part10:
            part10:
            ///clear screen
            clear(10);
            printf("Profile:\n==========\n");
            printf("Nickname         : %s\n",cus[id2].name);
            printf("Phone number     : %s\n",cus[id2].phone);
            printf("password         : %s\n",cus[id2].password);
            printf("Date of birth    : %s\n",cus[id2].date_of_birth);
            printf("Best friend name : %s\n",cus[id2].best_friend);
            printf("Address          : %s\n",cus[id2].address1);

            printf("\n1. Back\n");
            printf("Enter key : ");
            scanf("%d",&key4);keysound();

            ///clean screen
            clear(8);


            if(key4==1)
                goto part9;
            else
            {
                errorsound();
                goto part10;
            }

        }
        if(key3==2)
        {



///=====================================================================================
///part10a  order part
           part10a:
           while(1)
            {

              ///online_shop struct update
              p = fopen("shop_list.txt","a+");
              index3 = 0;
              while(!feof(p))
              {
                    index3++;
                    fscanf(p,"%s ",online_shop[index3].shop_name);
                    fscanf(p,"%d",&online_shop[index3].norder);
              }
              fclose(p);

                while(1)
                {
                system("cls");
                printf("=====================================\n");
                printf("||||||||||||||  FODX  |||||||||||||||\n");
                printf("=====================================\n");
                if(index3==0)
                {
                    printf("(There is no online shop...\n)");
                }
                else
                {
                for(int i=1;i<=index3;i++)
                {
                    printf("(%d) . %s\n",i,online_shop[i].shop_name);

                    if(own[i].norder<=5){
                    printf("         --- --- --- --- ---\n");
                    printf("Status : |*| |*| |*| |*| |*| (5 STAR)\n");
                    printf("         --- --- --- --- ---\n");}
                    else if(own[i].norder>=6 && own[i].norder<=10){
                    printf("         --- --- --- ---\n");
                    printf("Status : |*| |*| |*| |*| (4 STAR)\n");
                    printf("         --- --- --- ---\n");}
                    else if(own[i].norder>=11 && own[i].norder<=15){
                    printf("         --- --- ---\n");
                    printf("Status : |*| |*| |*| (3 STAR)\n");
                    printf("         --- --- ---\n");}
                    else if(own[i].norder>=16 && own[i].norder<=20){
                    printf("         --- ---\n");
                    printf("Status : |*| |*| (2 STAR)\n");
                    printf("         --- ---\n");}
                    else if(own[i].norder>=21){
                    printf("         ---\n");
                    printf("Status : |*| (1 STAR)\n");
                    printf("         ---\n");}
                    printf("=====================================\n");
                }
                }
                printf("\n");

                printf("(-1) . Back\n");
                printf("Enter the key : ");
                scanf("%d",&key29);

                if(key29>=1 && key29<=index3)
                {
                    oid = key29;
                    system("cls");
                    goto part10b;
                }
                if(key29==-1)
                {
                    system("cls");
                    goto part9;
                }
                }





///part10b
                part10b:
                system("cls");

/// struct update file for owner food

               item = 0;
              amount = 0;
              int f[110000]={0};
              remove_array(food_index,900);
               strcpy(phone7  ,  own[oid].phone);
               strcat(phone7, "f.txt");
               index2 = 0;
               p = fopen(phone7,"a+");


              while(!feof(p))
              {
              index2++;
              fscanf(p,"%s\n",cus_food[index2].food_name);
              fscanf(p,"%d\n",&cus_food[index2].food_price);
              fscanf(p,"%d\n",&cus_food[index2].food_remain);
              }
              fclose(p);

///owner profile file update...
/// owner.txt file update...

            p=fopen("owner.txt","w");

            for(int i=1;i<=ouser;i++)
            {
            fprintf(p,"%d\n",own[ouser].norder);
            fprintf(p,"%s\n",own[ouser].shop_name);
            fprintf(p,"%s\n",own[ouser].nickname);
            fprintf(p,"%s\n",own[ouser].phone);
            fprintf(p,"%s\n",own[ouser].password);
            fprintf(p,"%s\n",own[ouser].date_of_birth);
            fprintf(p,"%s\n",own[ouser].best_friend);
            }

            fclose(p);


                printf("=====================================\n");
                printf("||||||||||||||  FODX  |||||||||||||||\n");
                printf("=====================================\n");
                printf("Order : \n");
                printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");


                for(int i=1;i<=index2;i++)
                {
                    printf(" (%d) %s\n",i,cus_food[i].food_name);
                    printf(" PRICE : %d TAKA\n",cus_food[i].food_price);
                    if(cus_food[i].food_remain>0)
                        printf("(This food is available now)\n");
                    else
                        printf("(This food is not available now)\n");
                    printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                }

                printf("=================================\n");
                printf("Total ordered item  :  %d\n",item);
                printf("Total amount        :  %d TAKA\n",amount);
                printf("=================================\n");

                printf("51. Back (your order will cancel)\n");
                printf("52. Search food\n");
                printf("53. Filter price\n");
                printf("54. Confirm order\n");

                printf("\n\nEnter the key : ");
                scanf("%d",&key16);keysound();

///part10c...
                part10c:
                if(key16>=1 && key16<=index2 && (cus_food[key16].food_remain>0))
                {
                    food_index[item] = key16;
                    amount = amount + cus_food[key16].food_price;
                    f[key16]++; ///for delete remain food...
                    item++;
                }
                if(key16==52)
                {
                    system("cls");
                    printf("Search food : \n");
                    printf("Use \" _ \" at the place of space\n");
                    printf("Enter food name : ");
                    scanf("%s",&search);keysound();

                    strlwr(search);


                    printf("Result: \n");
                    n1=0;
                    for(int j=1;j<=index2;j++)
                    {
                        strcpy(search1,cus_food[j].food_name);
                        strlwr(search1);

                        if(strstr(search1 , search))
                        {
                            printf(" (%d) %s\n",j,cus_food[j].food_name);
                            printf(" PRICE : %d TAKA\n",cus_food[j].food_price);
                            if(cus_food[index2].food_remain>0)
                                printf("(This food is available now)\n");
                            else
                                printf("(This food is not available now)\n");
                            printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                            n1++;
                        }
                        remove_string(search1);
                    }
                    remove_string(search);
                    if(n1==0)
                        printf("(Not found)\n\n");

                    printf("51. Back\n");
                    printf("52. Search food\n");
                    printf("53. Filter price\n");
                    printf("54. Confirm order\n");

                    printf("\n\nEnter the key : ");
                    scanf("%d",&key16);keysound();

                    if(key16==51)
                    {
                        system("cls");
                        goto part10b;
                    }
                    else
                    {
                        system("cls");
                        goto part10c;
                    }

                }
                if(key16==53)
                {
                    system("cls");
                    printf("Filter : \n===============\n");
                    printf("Price greater than : ");
                    scanf("%d",&filter1);keysound();
                    printf("Price less than : ");
                    scanf("%d",&filter2);keysound();

                    system("cls");


                    printf("result : \n");
                    printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    n1=0;
                    for(int j=1;j<=index2;j++)
                    {
                        if(cus_food[j].food_price>=filter1 && cus_food[j].food_price<=filter2)
                        {
                            printf(" (%d) %s\n",j,cus_food[j].food_name);
                            printf(" PRICE : %d TAKA\n",cus_food[j].food_price);
                            printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                            n1++;
                        }
                    }
                    if(n1==0)
                        printf("Not found\n");

                    printf("51. Back\n");
                    printf("52. Search food\n");
                    printf("53. Filter price\n");
                    printf("54. Confirm order\n");

                    printf("\n\nEnter the key : ");
                    scanf("%d",&key16);keysound();

                    if(key16==51)
                    {
                        system("cls");
                        goto part10b;
                    }
                    else
                    {
                        system("cls");
                        goto part10c;
                    }

                }
                if(key16==51)
                {
                    remove_array(food_index,item);
                    amount = 0;
                    item = 0;
                    goto part9;
                }
                if(key16==54)
                {

///part10c1
                    for(int i=0;i<=1000;i++)
                    {
                        if(f[i]!=0)
                        {
                            cus_food[i].food_remain-=f[i];
                        }
                    }


                    p = fopen("shop_list.txt","w");

                    for(int i=1;i<=index3;i++)
                    {
                    fprintf(p,"%s",online_shop[index3].shop_name);
                    fprintf(p,"%d",online_shop[index3].norder);
                    }
                    fclose(p);



                    part10c1:
                    ///clear screen
                    clear(30);
                    printf("Address : \n===========\n");
                    printf("Address (use \" _ \" at the place of space) : ");
                    scanf("%s",&address);keysound();
                    ///clear screen
                    clear(30);

                    printf("Payment process : \n==================\n");
                    printf("1. Cash on delivery\n");
                    printf("2. Bkash\n");

                    printf("Enter the key : ");
                    scanf("%d",&key17);keysound();

                    if(key17==1)
                    {
                        while(1)
                        {
                        ///clear screen
                        clear(30);
                        printf("Order : \n=============\n");
                        printf("Order confirmed...\n\n");

                        printf("(1) . Back to menu\n");
                        successsound();

                        printf("Enter the key : ");
                        scanf("%d",&key18);keysound();
                        if(key18==1)
                            goto part10d;
                        }
                    }
                    if(key17==2)
                    {
                        ///clear screen
                        clear(30);
                        printf("Payment by Bkash:\n===================\n");
                        printf("Transfer the certain amount of money at this number : %s\n",own[key29].phone);

                        printf("After transfer money enter the transection id : ");
                        scanf("%s",&transection);keysound();

                        while(1)
                        {
                            ///clear screen
                            clear(30);
                            printf("Order : \n=============\n");
                            printf("Order confirmed...\n\n");

                            printf("(1) . Back to menu\n");
                            successsound();

                            printf("Enter the key : ");
                            scanf("%d",&key18);keysound();
                            if(key18==1)
                                goto part10d;
                        }
                    }
                    else
                        goto part10c1;


///part10d
                    part10d:
///for customer history
                    strcpy(phone3 , cus[id1].phone);
                    strcat(phone3 , ".txt");
                    strcpy(cus_history , phone3);

                    p = fopen(cus_history , "a");
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    fprintf(p,"Order date and time : \n%s",ctime(&t));
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    for(int j=0;j<item;j++)
                    {
                        int index4 = food_index[j];

                        fprintf(p,"(%d) . %s (%d TAKA)\n",j+1,cus_food[index4].food_name,cus_food[index4].food_price);
                    }
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    fprintf(p,"Total item : %d\n",item);
                    fprintf(p,"Total amount : %d\n",amount);

                    if(key17==1)
                        fprintf(p,"Payment process : Cash on delivery\n");
                    if(key17==2)
                        fprintf(p,"Payment process : Bkash\n");

                    fprintf(p,"Shop name : %s\n",own[key29].shop_name);

                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n\n");
                    fclose(p);

///for owner about customer history


                     char phone9[10000];
                     strcpy(phone9  ,  own[key29].phone);
                     strcat(phone9, "_o_h.txt");

                     p = fopen(phone9,"a");

                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    fprintf(p,"Order date and time : \n%s",ctime(&t));
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    fprintf(p,"Customer phone number :\n%s\n-=-=-=-=-=-=-=-=-=-=-=-=-=-\n",cus[id2].phone);
                    for(int j=0;j<item;j++)
                    {
                        int index2 = food_index[j];

                        fprintf(p,"(%d) . %s (%d TAKA)\n",j+1,cus_food[index2].food_name,cus_food[index2].food_price);
                    }
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                    fprintf(p,"Total item : %d\n",item);
                    fprintf(p,"Total amount : %d\n",amount);

                    if(key17==1)
                        fprintf(p,"Payment process : Cash on delivery\n");
                    if(key17==2)
                    {
                        fprintf(p,"Payment process : Bkash\n");
                        fprintf(p,"Transection id : %s\n",transection);
                    }

                    fprintf(p,"Address : %s\n",address);
                    fprintf(p,"-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n\n");

                    fclose(p);
                    system("cls");
                    goto part9;
                    }
                }
        }
        if(key3==3)
        {
///part11
            part11:
            system("cls");
            strcpy(phone3 , cus[id1].phone);
            strcat(phone3 , ".txt");
            strcpy(cus_history , phone3);

            p = fopen(cus_history , "a+");

            printf("My order history :\n");
            printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
            while(!feof(p))
            {
                ch1=fgetc(p);
                printf("%c",ch1);
            }

            fclose(p);

            printf("\n\n1. Clear history\n");
            printf("2. Back\n");
            printf("Enter key : ");
            scanf("%d",&key5);keysound();

            if(key5==1)
            {
                p=fopen(cus_history,"w");

                fclose(p);
                goto part11;
            }
            else if(key5==2)
            {
                goto part9;
            }
            else
                goto part11;
        }
        if(key3==4)
        {
            remove_string(phone3);
            id2=id3=id1=0;
            remove_string(cus_history);
            goto part1;
        }
        if(key3==5)
        {
            remove_string(phone3);
            remove(cus_history);
            part = 9;
            id3=id2;
            del=1;
            goto part2;
        }
        if(key3==6)
        {
///part11a   reset account part
            part11a:
            ///clear screen
            clear(8);
            printf("For security:\n===============\n");
            printf("Enter the password : ");
            scanf("%s",&password2);keysound();

            if(strcmp(cus[id1].password , password2)==0)
            {
///part11b
                part11b:
                while(1)
                {
                ///clear screen
                clear(8);
                printf("Account setting :\n===================\n");
                printf("1. Change nickname\n");
                printf("2. Change Date of birth\n");
                printf("3. Change password\n");
                printf("4. Back\n==================\n");
                printf("Enter the key : ");
                scanf("%d",&key8);keysound();

                if(key8==1)
                {
                    printf("Previous nickname : %s\n",cus[id1].name);
                    printf("New nickname : ");
                    scanf("%s",&cus[id1].name);keysound();
                }
                if(key8==2)
                {
                    printf("Previous Date of birth : %s\n",cus[id1].date_of_birth);
                    printf("New Date of birth : ");
                    scanf("%s",&cus[id1].date_of_birth);keysound();
                }
                if(key8==3)
                {
                    printf("Previous password : %s\n",cus[id1].password);
                    printf("New password : ");
                    scanf("%s",&cus[id1].password);keysound();
                }
                if(key8==4)
                {
                    goto part9;
                }
                else
                {
                    goto part11b;
                }
                }
            }
            else
            {
                ///clear screen
                clear(8);
///part11c
                part11c:
                ///clear screen
                clear(8);
                printf("1. (wrong password) Try again\n");
                printf("2. Back to the Menu\n=======================\n");
                printf("Enter the key : ");
                scanf("%d",&key7);keysound();

                if(key7==1)
                {
                    goto part11a;
                }
                if(key7==2)
                {
                    goto part9;
                }
                else
                {
                    goto part11c;
                }
            }
        }
        if(key3==7)
        {
            while(1)
            {
            ///clear screen
            clear(8);
            printf("Contact us: \n===============\n");
            printf("Mobile number : 01818477521\n");
            printf("Email address : iftekharalam5623@gmail.com\n\n");

            printf("1. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key20);keysound();

            if(key20==1)
            {
                ///clear screen
                clear(8);
                goto part9;
            }
            }
        }
        if(key3==8)
        {
///part11d...
            part11d:
            system("cls");

            while(1)
            {
            printf("Enter the range (kilometer): ");
            scanf("%lf",&range);
            range+=.00001;
            keysound();

///part11e
            part11e:

            key21=1;
            number = 1;
            gotoxy(0,0);
            printf("Nearest restaurant in %.2lf km range\n",range);
            printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
            for(int i=1;i<=66;i++)
            {
                for(int j=1;j<=18;j++)
                {
                    l2=g2=0;
                    if(strcmp(cus[id1].address1 , u_address[j].address)==0)
                    {
                        l2 = u_address[j].lat2;
                        g2 = u_address[j].lon2;
                        break;
                    }
                }
                distance = l1 = g1 = 0;
                l1 = h_address[i].lat1;
                g1 = h_address[i].lon1;

                l1 = l1 * (  3.1415 / 180 );
                l2 = l2 * (  3.1415 / 180 );
                g1 = g1 * (  3.1415 / 180 );
                g2 = g2 * (  3.1415 / 180 );

                dlong = g2 - g1;

                dlat = l2 - l1;


                distance = pow((sin(dlat / 2)), 2) + cos(l1) * cos(l2) * pow((sin(dlong / 2)), 2);


                distance = 2 * atan2(sqrt(distance),sqrt(1-distance));

                double R = 6371;

                distance = distance * R;

                if(range > distance)
                {
                    sort_address[number] = i;
                    sort_distance[number]=distance;
                    number++;
                }

            }

            for(int i=1;i<number;i++)
            {
                for(int j=i+1;j<number;j++)
                {
                  if(sort_distance[i]>sort_distance[j])
                  {
                      temp = sort_address[i];
                      sort_address[i] = sort_address[j];
                      sort_address[j] = temp;

                      temp = sort_distance[i];
                      sort_distance[i] = sort_distance[j];
                      sort_distance[j] = temp;
                  }
                }
            }

            if(number == 1)
                printf("(Not found)\n\n");
            else
            {
                gotoxy(46,0);
                for(int i=0;i<60;i++)
                    printf("-");


                for(int i=0;i<27;i++)
                {
                    gotoxy(45,i+1);
                    printf("|");
                }


                gotoxy(46,28);
                for(int i=0;i<60;i++)
                    printf("-");


                for(int i=0;i<27;i++)
                {
                    gotoxy(106,i+1);
                    printf("|");
                }

                gotoxy(46,14);
                for(int i=0;i<60;i++)
                    printf("-");

                for(int i=0;i<27;i++)
                {
                    gotoxy(76,i+1);
                    printf("|");
                }

                gotoxy(76,1);
                printf("^");

                gotoxy(75,0);
                printf("(N)");

                gotoxy(76,27);
                printf("v");

                gotoxy(75,28);
                printf("(S)");


                gotoxy(44,14);
                printf("(W)");

                gotoxy(105,016);
                printf("(E)");

                gotoxy(104,14);
                printf(">");

                gotoxy(47,14);
                printf("<");

                gotoxy(75,14);  ///middle 76,12
                printf("(A)");


                gotoxy(0,2);
                for(int i=1;i<number;i++)
                {
                        index1 = sort_address[i];
                        printf("(%d) . %s\nDistance : %.2lf km\n",i , h_address[index1].address , sort_distance[i]);
                        printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
                }

            }

            printf("\n\n(-1). Back\n");
            printf("(-2). Try again\n");
            printf("Enter the key : ");
            scanf("%d",&key21);keysound();

            system("cls");

            index1 = sort_address[key21];
            gotoxy(45,29);
            printf("(A) = %s , (B) = %s",cus[id1].address1,h_address[index1].address);

            if(key21>=1 && key21<number)
            {

                    for(int j=1;j<=18;j++)
                    {
                    if(strcmp(cus[id1].address1 , u_address[j].address)==0)
                    {
                        l2 = u_address[j].lat2;
                        g2 = u_address[j].lon2;
                        break;
                    }
                    }

                    index1 = sort_address[key21];

                    l1 = h_address[index1].lat1;
                    g1 = h_address[index1].lon1;

                    int x1 = l1*10000;
                    int x2 = l2*10000;
                    int y1 = g1*10000;
                    int y2 = g2*10000;

                    sum = cordinate(distance);
                    if(x1<x2 && y1<y2)
                    {
                        gotoxy(75-sum,14-sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 ==x2 && y1 <y2)
                    {
                        gotoxy(75+1,14+sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 <x2 && y1> y2)
                    {
                        gotoxy(75-sum,14+sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 <x2 && y1== y2)
                    {
                        gotoxy(75-sum,14+1);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 ==x2 && y1 >y2)
                    {
                        gotoxy(75+1,14-sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 >x2 && y1 > y2)
                    {
                        gotoxy(75+sum,14-sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 >x2 && y1== y2)
                    {
                        gotoxy(75+sum,14+1);  ///middle 76,14
                        printf("(B)");
                    }
                    else if(x1 >x2 && y1 <y2)
                    {
                        gotoxy(75+sum,14-sum);  ///middle 76,14
                        printf("(B)");
                    }
                    else
                    {
                        goto part11e;
                    }

                    goto part11e;


            }
            if(key21==-1)
            {
                system("cls");
                goto part9;
            }
            if(key21==-2)
            {
                system("cls");
                goto part11d;
            }
            else
            {
                system("cls");

                goto part11e;
            }
            system("cls");

            }
        }
        else
        {
            goto part9;
        }
///=========================================================================================printtf=========
///owner menu:
///part12
       part12:



part12a1:
        /// struct take data from file for owner food list...
        strcpy(phone7  ,  own[oid].phone);
        strcat(phone7, "f.txt");
        index2 = 0;
        p = fopen(phone7,"a+");

        while(!feof(p))
        {
            index2++;
            fscanf(p,"%s",cus_food[index2].food_name);
            fscanf(p,"%d",&cus_food[index2].food_price);
            fscanf(p,"%d",&cus_food[index2].food_remain);
        }
        fclose(p);

part12a3:
        /// struct update file for owner food
        strcpy(phone7  ,  own[oid].phone);
        strcat(phone7, "f.txt");
        p = fopen(phone7,"w");

        for(int i=1;i<=index2;i++){
            fprintf(p,"%s\n",cus_food[index2].food_name);
            fprintf(p,"%d\n",cus_food[index2].food_price);
            fprintf(p,"%d\n",cus_food[index2].food_remain);
        }
        fclose(p);

part12a4:
        p = fopen("owner.txt","w");

        for(int i=1;i<=ouser;i++)
        {
            fprintf(p,"%d\n",own[i].norder);
            fprintf(p,"%s\n",own[i].shop_name);
            fprintf(p,"%s\n",own[i].nickname);
            fprintf(p,"%s\n",own[i].phone);
            fprintf(p,"%s\n",own[i].password);
            fprintf(p,"%s\n",own[i].date_of_birth);
            fprintf(p,"%s\n",own[i].best_friend);
        }
        fclose(p);


///online_shop struct update
        p = fopen("shop_list.txt","a+");
        index3 = 0;
        while(!feof(p))
        {
            index3++;
            fscanf(p,"%s",online_shop[index3].shop_name);
            fscanf(p,"%d",&online_shop[index3].norder);
        }
        fclose(p);


        if(part==13)  /// came from owner log out part...
        {
            part=0;
            goto part3;  /// now it will go to the start point...
        }

///part12a...
        part12a:
        while(1)
        {
        system("cls");
        printf("As-salamu alaykum %s\n\n",own[oid].nickname);
        printf("Menu\n==========\n");
        printf("1. My profile\n");
        printf("2. customer order\n");
        printf("3. Log out\n");
        printf("4. Add new food item\n");
        printf("5. Add food\n");
        printf("6. Change food price\n");
        printf("7. Account setting\n\n");
        printf("Total user of FODX: %d\n",user);
        printf("=======================\n");
        printf("Enter the key : ");

        scanf("%d",&key14);keysound();

        if(key14==1)
        {
            while(1)
            {
            ///clear screen
            clear(100);
            printf("Profile : \n==============\n");
            printf("Nickname         : %s\n",own[oid].nickname);
            printf("Phone number     : %s\n",own[oid].phone);
            printf("Password         : %s\n",own[oid].password);
            printf("Date of birth    : %s\n",own[oid].date_of_birth);
            printf("Best friend name : %s\n",own[oid].best_friend);
            printf("Shop name        : %s\n",own[oid].shop_name);

        if(own[oid].norder<=5){
            printf("         --- --- --- --- ---\n");
            printf("Status : |*| |*| |*| |*| |*| (5 STAR)\n");
            printf("         --- --- --- --- ---\n");}
        else if(own[oid].norder>=6 && own[oid].norder<=10){
            printf("         --- --- --- ---\n");
            printf("Status : |*| |*| |*| |*| (4 STAR)\n");
            printf("         --- --- --- ---\n");}
        else if(own[oid].norder>=11 && own[oid].norder<=15){
            printf("         --- --- ---\n");
            printf("Status : |*| |*| |*| (3 STAR)\n");
            printf("         --- --- ---\n");}
        else if(own[oid].norder>=16 && own[oid].norder<=20){
            printf("         --- ---\n");
            printf("Status : |*| |*| (2 STAR)\n");
            printf("         --- ---\n");}
        else if(own[oid].norder>=21){
            printf("         ---\n");
            printf("Status : |*| (1 STAR)\n");
            printf("         ---\n");}
            printf("\n");

            printf("1. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key15);keysound();
            if(key15==1)
            {
                ///clear screen
                clear(8);
                goto part12;
            }
            }
        }
        if(key14==2)
        {
            while(1)
            {
            system("cls");
            strcpy(phone8,own[oid].phone);
            strcat(phone8,"_o_h.txt");

            p = fopen(phone8,"a+");

            printf("Order list : \n");
            printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
            while(!feof(p))
            {
                ch2=fgetc(p);
                printf("%c",ch2);
            }
            fclose(p);

            printf("\n\n1. Back\n");
            printf("2. Clear order list\n");


            printf("Enter the key : ");
            scanf("%d",&key19);keysound();

            if(key19==1)
                goto part12;
            else if(key19==2)
            {
                p = fopen("owner_history.txt","w");

                fclose(p);
            }
            }
        }
        if(key14==3)
        {
///part13...
            part13:
            ///clear screen
            clear(8);
            part = 13;
            goto part12;
        }
        if(key14==4)
        {
            printf("Add food: \n===============\n");
            printf("How many food item do you wanna add : ");
            scanf("%d",&n3);
            for(int i=1;i<=n3;i++)
            {
                index2++;
                system("cls");
                printf("Item : %d\n\n",i);
                printf("Add food: \n===============\n");
                printf("Food name : ");
                scanf("%s",cus_food[index2].food_name);
                printf("Food price : ");
                scanf("%d",&cus_food[index2].food_price);
                printf("Amount of food : ");
                scanf("%d",&cus_food[index2].food_remain);
            }

            while(1)
            {
            system("cls");
            printf("Add food: \n===============\n");
            printf("New food items added successfully...\n");
            printf("\n1. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key24);

            system("cls");
            if(key24==1)
            {
                goto part12a;
            }
            }
        }
        if(key14==5)
        {
            while(1)
            {
            printf("Add food: \n=================\n");
            if(index2>1)
            {
            for(int i = 1 ; i<=index2 ; i++)
            {
                printf("(%d) . %s\n",i,cus_food[i].food_name);
                printf("Remain : %d\n",cus_food[i].food_remain);
                printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
            }
            }
            else
            {
                printf("(There is no food)\n");
            }

            printf("\n(-1) . Back\n");
            printf("Enter the key : ");
            scanf("%d",&key25);

            if(key25>=1 && key25<index2)
            {
                system("cls");
                printf("Add food: \n=================\n");
                printf("Food name: %s\n",cus_food[key25].food_name);
                printf("Food previous amount : %d",cus_food[key25].food_remain);
                printf("Add food : ");
                scanf("%d",&cus_food[key25].food_remain);

                while(1)
                {
                system("cls");
                printf("Add food: \n=================\n");
                printf("Food added successfully...");
                printf("\n\n(1) . Back\n");
                printf("Enter the key : ");
                scanf("%d",&key26);

                if(key26==1)
                {
                    system("cls");
                    goto part12a;
                }
                }
            }
            if(key25==-1)
            {
                system("cls");
                goto part12a;
            }
            }
        }
        if(key14==6)
        {
            while(1)
            {
            printf("Change food price: \n=================\n");
            if(index2>0)
            {
            for(int i = 1 ; i<=index2 ; i++)
            {
                printf("(%d) . %s\n",i,cus_food[i].food_name);
                printf("Remain : %d\n",cus_food[i].food_price);
                printf("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
            }
            }
            else
            {
                printf("(There is no food)\n");
            }

            printf("\n-1. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key25);

            if(key25>=1 && key25<index2)
            {
                system("cls");
                printf("Change food price : \n===================\n");
                printf("Food name: %s\n",cus_food[key25].food_name);
                printf("Previous food price : %d",cus_food[key25].food_remain);
                printf("New food price : ");
                scanf("%d",&food_price);

                cus_food[key25].food_price = food_price;

                while(1)
                {
                system("cls");
                printf("Changed price successfully...");
                printf("\n\n1. Back\n");
                printf("Enter the key : ");
                scanf("%d",&key26);

                if(key26==1)
                {
                    system("cls");
                    goto part12a;
                }
                }
            }
            if(key25==-1)
            {
                system("cls");
                goto part12a;
            }
            }
        }
        if(key14==7)
        {
            while(1)
            {
            system("cls");
            printf("Account setting : \n==================\n");
            printf("1. Change password\n");
            printf("2. Change nickname\n");

            printf("3. Back\n");
            printf("Enter the key : ");
            scanf("%d",&key28);
            if(key28==1)
            {
                system("cls");
                printf("Change password :\n===================\n");
                printf("previous password : %s\n",own[oid].password);
                printf("New password : ");
                scanf("%s",own[oid].password);
            }
            if(key28==2)
            {
                system("cls");
                printf("Change nickname :\n===================\n");
                printf("previous nickname : %s\n",own[oid].nickname);
                printf("New nickname : ");
                scanf("%s",own[oid].nickname);
            }
            if(key28 == 3)
            {
                system("cls");
                goto part12a;
            }

            }


        }
        }


        return 0;
}
